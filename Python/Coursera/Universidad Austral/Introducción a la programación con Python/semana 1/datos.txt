Creado a finales de los 80 por Guido Van Rossum, lenguaje multiparadigma porque soporta Programación Orientada a Objetos, programación imperativa y en menor medida programación funcional. 

Lenguaje con tipado dinámico. lenguaje case sensitive
Python es un lenguaje interpretado, es decir, se ejecuta linea por linea, mientras que los lenguajes compilados para ejecutarlos primeros pasan por un proceso de compilación en la que sus lineas se traducen a binario para que la computadora lo pueda comprender.

import math --> math.pi = 3.141592...
math.e --> 2.718281..
math.sqrt(4) --> 2.0 (raiz cuadrada)

import this --> The zen of Python by Tim Peters:

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break the rules.
Although practicality beats purity.
Errors should never pass silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one-- and preferably only one --obvious way to do it.
Although that way may not be obvious at first unless you're Dutch.
Now is better than never.
Although never is often better than *right* now.
If the implementation is hard to explain, it's a bad idea.
If the implementation is easy to explain, it may be a good idea.
Namespaces are one honking great idea -- let's do more of those!


funcion type(valor/variable) --> devuelve tipo de dato


help(libreria) --> datos de la libreria y sus funciones

